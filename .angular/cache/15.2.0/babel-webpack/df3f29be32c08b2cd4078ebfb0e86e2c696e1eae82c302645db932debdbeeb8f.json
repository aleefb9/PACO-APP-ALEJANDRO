{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class IDBService {\n  constructor() {}\n  anadirFav() {\n    const peticion = indexedDB.open('PacoApp', 2);\n    peticion.onerror = evento => {\n      throw 'Error al conectar indexedDB';\n    };\n    peticion.onupgradeneeded = evento => {\n      console.log(evento);\n      this.conexion = evento.target.result;\n      this.crear();\n    };\n    peticion.onsuccess = evento => {\n      this.conexion = evento.target.result;\n    };\n  }\n  crear() {\n    const tabla = this.conexion.createObjectStore('Favoritas', {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  }\n  insertar(objeto, mensajes) {\n    mensajes[1].titulo = 'Error';\n    mensajes[2].titulo = 'Bien hecho';\n    const transaccion = this.conexion.transaction(['Favoritas'], 'readwrite');\n    transaccion.onerror = evento => {\n      if (mensajes[1].tipo == 'error') {\n        mensajes[1].titulo = 'HAY ERROR';\n      }\n      throw 'Error al insertar, alomejor has elegido el mismo ðŸ¥²ðŸ¤”';\n    };\n    if (mensajes[1].titulo != 'HAY ERROR') {\n      const tabla = transaccion.objectStore('Favoritas');\n      const peticion = tabla.add(objeto);\n      if (mensajes[2].tipo == 'exito') {\n        mensajes[2].titulo = 'ESTA BIEN';\n      }\n    }\n  }\n}\nIDBService.Éµfac = function IDBService_Factory(t) {\n  return new (t || IDBService)();\n};\nIDBService.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n  token: IDBService,\n  factory: IDBService.Éµfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,UAAU;EAErBC,eAAgB;EAEhBC,SAAS;IACP,MAAMC,QAAQ,GAAoBC,SAAS,CAACC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC9DF,QAAQ,CAACG,OAAO,GAAGC,MAAM,IAAG;MAAE,MAAM,6BAA6B;IAAA,CAAC;IAClEJ,QAAQ,CAACK,eAAe,GAAID,MAAU,IAAI;MAC9BE,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC;MAC/B,IAAI,CAACI,QAAQ,GAAGJ,MAAM,CAACK,MAAM,CAACC,MAAM;MACpC,IAAI,CAACC,KAAK,EAAE;IACR,CAAC;IACLX,QAAQ,CAACY,SAAS,GAAIR,MAAU,IAAI;MAAE,IAAI,CAACI,QAAQ,GAAGJ,MAAM,CAACK,MAAM,CAACC,MAAM;IAAA,CAAC;EAC7E;EAEAC,KAAK;IACH,MAAME,KAAK,GAAkB,IAAI,CAACL,QAAQ,CAACM,iBAAiB,CAAC,WAAW,EAAE;MAAEC,OAAO,EAAE,IAAI;MAAEC,aAAa,EAAE;IAAI,CAAE,CAAC;EACnH;EAEAC,QAAQ,CAACC,MAAkB,EAACC,QAAY;IACtCA,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAC,OAAO;IAC1BD,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAC,YAAY;IAC/B,MAAMC,WAAW,GAAkB,IAAI,CAACb,QAAQ,CAACc,WAAW,CAAC,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC;IACxFD,WAAW,CAAClB,OAAO,GAAGC,MAAM,IAAG;MAC7B,IAAGe,QAAQ,CAAC,CAAC,CAAC,CAACI,IAAI,IAAE,OAAO,EAAC;QAC3BJ,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAC,WAAW;;MAEhC,MAAM,uDAAuD;IAC/D,CAAC;IACD,IAAGD,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,IAAE,WAAW,EAAC;MACjC,MAAMP,KAAK,GAAGQ,WAAW,CAACG,WAAW,CAAC,WAAW,CAAC;MAClD,MAAMxB,QAAQ,GAAca,KAAK,CAACY,GAAG,CAACP,MAAM,CAAC;MAC7C,IAAGC,QAAQ,CAAC,CAAC,CAAC,CAACI,IAAI,IAAE,OAAO,EAAC;QAC5BJ,QAAQ,CAAC,CAAC,CAAC,CAACC,MAAM,GAAC,WAAW;;;EAGrC;;AApCavB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAA6B,SAAV7B,UAAU;EAAA8B,YAFT;AAAM","names":["IDBService","constructor","anadirFav","peticion","indexedDB","open","onerror","evento","onupgradeneeded","console","log","conexion","target","result","crear","onsuccess","tabla","createObjectStore","keyPath","autoIncrement","insertar","objeto","mensajes","titulo","transaccion","transaction","tipo","objectStore","add","factory","providedIn"],"sourceRoot":"","sources":["C:\\xampp\\htdocs\\PACO-APP-ALEJANDRO\\src\\app\\idb.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Peliculas } from './peliculas';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IDBService {\r\n  public conexion: any;\r\n  constructor() { }\r\n\r\n  anadirFav():void{\r\n    const peticion:IDBOpenDBRequest = indexedDB.open('PacoApp', 2)\r\n    peticion.onerror = evento => {throw 'Error al conectar indexedDB'}\r\n    peticion.onupgradeneeded = (evento:any) => {\r\n                console.log(evento)\r\n    this.conexion = evento.target.result\r\n    this.crear()\r\n        }\r\n    peticion.onsuccess = (evento:any) => {this.conexion = evento.target.result}\r\n  }\r\n\r\n  crear(){\r\n    const tabla:IDBObjectStore = this.conexion.createObjectStore('Favoritas', { keyPath: 'id', autoIncrement: true })\r\n  }\r\n\r\n  insertar(objeto:Peliculas[],mensajes:any){\r\n    mensajes[1].titulo='Error'\r\n    mensajes[2].titulo='Bien hecho'\r\n    const transaccion:IDBTransaction = this.conexion.transaction(['Favoritas'], 'readwrite')\r\n    transaccion.onerror = evento => {\r\n      if(mensajes[1].tipo=='error'){\r\n        mensajes[1].titulo='HAY ERROR'\r\n      }\r\n      throw 'Error al insertar, alomejor has elegido el mismo ðŸ¥²ðŸ¤”'\r\n    }\r\n    if(mensajes[1].titulo!='HAY ERROR'){\r\n      const tabla = transaccion.objectStore('Favoritas')\r\n      const peticion:IDBRequest = tabla.add(objeto)\r\n      if(mensajes[2].tipo=='exito'){\r\n       mensajes[2].titulo='ESTA BIEN'\r\n      }\r\n    } \r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}